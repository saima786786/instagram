{"version":3,"sources":["Firebase.js","Post.js","ImageUpload.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","user","username","caption","imageUrl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","console","log","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","progress","setProgress","setCaption","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setopenSignIn","password","setPassword","email","setEmail","setUser","onAuthStateChanged","authUser","updateProfile","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","catch","signInWithEmailAndPassword","signOut","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.293cea83.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDcpqYjhLGQLjQYvajPGWQZqyH1oUiMl3Y\",\r\n    authDomain: \"instagram-b13e3.firebaseapp.com\",\r\n    databaseURL: \"https://instagram-b13e3.firebaseio.com\",\r\n    projectId: \"instagram-b13e3\",\r\n    storageBucket: \"instagram-b13e3.appspot.com\",\r\n    messagingSenderId: \"585205960124\",\r\n    appId: \"1:585205960124:web:2506c3e348757eec3b2fb9\",\r\n    measurementId: \"G-XH2T1BQR23\"\r\n  });\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {db, auth, storage };","import React,{ useState, useEffect} from 'react';\r\nimport './Post.css';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from './Firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction Post({postId, user, username, caption, imageUrl }) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(username)\r\n        let unsubscribe;\r\n   if (postId) {\r\n       unsubscribe = db\r\n         .collection(\"posts\")\r\n         .doc(postId)\r\n         .collection(\"comments\")\r\n         .orderBy('timestamp', 'desc')\r\n         .onSnapshot((snapshot) => {\r\n         setComments(snapshot.docs.map((doc) => doc.data()));\r\n         });\r\n   }\r\n   return () => {\r\n       unsubscribe();\r\n   };\r\n}, [postId]);\r\n\r\n   const PostComment = (event) => {\r\n    event.preventDefault();\r\n    console.log(user)\r\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n        text: comment,\r\n        username: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n    });\r\n    setComment('');\r\n   }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"pheader\">\r\n            <Avatar\r\n            className=\"pavatar\"\r\n            alt='saima afroz'\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ85To3VVbC6-bM6VUEEhH3na3cN17GIZoHzg&usqp=CAU\"\r\n            />\r\n            <h3>{username}</h3>\r\n            {/* avatar -> avatar + username */}\r\n            </div>\r\n\r\n            <img className=\"pimage\"\r\n            alt=\"\"\r\n            src={imageUrl}\r\n            />\r\n            {/*image*/}\r\n\r\n            <h4 className=\"ptext\">\r\n            <strong>{username}</strong> {caption}\r\n            </h4>\r\n            {/*username + caption */}\r\n\r\n            <div className=\"postcomments\">\r\n                {\r\n                    comments.map((comment) => (\r\n                        <p>\r\n                            <strong>{comment.username}</strong> {comment.text}\r\n                        </p>\r\n                    ))\r\n                }\r\n            </div>\r\n            {user && (\r\n             <form className=\"postcommentbox\">\r\n             <input \r\n             className=\"postinput\"\r\n             type=\"text\"\r\n             placeholder=\"Add a comment...\"\r\n             value={comment}\r\n             onChange={(e) => setComment(e.target.value)}\r\n             />\r\n\r\n            <button \r\n            className=\"postbutton\"\r\n            disabled={!comment}\r\n            type=\"submit\"\r\n            onClick={PostComment}\r\n            >\r\n            <h4>post</h4>\r\n            </button>\r\n            </form>   \r\n    )}           \r\n        </div>\r\n    )\r\n}\r\n\r\n      export default Post;\r\n\r\n","import { Button } from '@material-ui/core';\r\nimport React, {useState} from 'react';\r\nimport firebase from \"firebase\";\r\nimport { storage, db} from './Firebase';\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload({username}) {\r\nconsole.log(username)\r\nconst [image, setImage] = useState(null);\r\nconst [progress, setProgress] = useState(0);\r\nconst [caption, setCaption] = useState('');\r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.files[0]) {\r\n        setImage(e.target.files[0]);\r\n    }\r\n};\r\n\r\nconst handleUpload = () => {\r\n    console.log(image)\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n    uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n           //progress function...\r\n           const progress =Math.round(\r\n             (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n           );\r\n           setProgress(progress);\r\n        },\r\n        (error) => {\r\n            // error function...\r\n            console.log(error);\r\n            alert(error.message);\r\n        },\r\n        () => {\r\n            //complete function...\r\n            storage\r\n            .ref(\"images\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                console.log(url)\r\n                //post img inside db\r\n                db.collection(\"posts\").add({\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    caption: caption,\r\n                    imageUrl: url,\r\n                    username: username || 'Admin'\r\n\r\n                });\r\n                setProgress(0);\r\n                setCaption(\"\");\r\n                setImage(null);\r\n            });\r\n        }\r\n    )\r\n};\r\n    return (\r\n        <div className=\"imageupload\">\r\n            {/*i want to have */}\r\n            {/* caption input */}\r\n            {/* file picker*/}\r\n            {/* post button */}\r\n\r\n            <progress className=\"imageuploadprogress\" value={progress} max= \"100\" />\r\n            <input type=\"text\" placeholder='Enter a caption' onChange={event => setCaption(event.target.value)} value={caption} />\r\n            <input type=\"file\" onChange={handleChange} />\r\n            <Button onClick= {handleUpload}>\r\n               <strong>UPLOAD</strong> \r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { auth, db } from './Firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport{ Button, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setopenSignIn] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); \n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null);\n\n  \n    //runs a piece of code based on aspecific condn = useEffect\n    useEffect(() => {\n      const unsubscribe = auth.onAuthStateChanged((authUser) => {\n         if (authUser) {\n             //has user logged in\n             setUser(authUser);\n\n             if (authUser.displayName){\n                // dont update user name\n             }else{\n                //if we just created someone\n                return authUser.updateProfile({\n                  displayName: username\n                })\n             }\n         }\n         else{\n            //has user logged out\n            setUser(null);\n         }\n       })\n    }, [username]);\n\n    useEffect(() => {\n     // here code run\n\n     db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n       //here evry tym new post added\n\n       setPosts(snapshot.docs.map(doc => ({\n         id: doc.id,\n         post: doc.data()\n        })));\n     })\n    }, []);\n\n    const signUp = (event) => {\n       event.preventDefault();\n\n       auth\n       .createUserWithEmailAndPassword(email, password)\n       .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username\n        })\n       })\n       .catch((error) => alert(error.message));\n       setOpen(false);\n    }\n      \n       const signIn =  (event) => {\n       event.preventDefault();\n\n       auth\n       .signInWithEmailAndPassword(email, password)\n       .catch((error) => alert(error.message))\n\n       setopenSignIn(false);\n    }\n    console.log(posts)\n    return (\n    <div className=\"App\">\n\n    <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"appsignup\">\n         <center>\n           <img className=\"appheaderimage\"\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTYVsBMwE45E6rXsJHWO5p-C95h6sH4FRk7IA&usqp=CAU\"\n        alt=\"\"\n           />\n          </center>\n      \n           <Input\n            placeholder=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            />\n           <Button type=\"submit\" onClick={signUp}> Sign Up</Button>\n            \n         \n         </form>\n        </div>\n      </Modal>\n      <Modal\n        open={openSignIn}\n        onClose={() => setopenSignIn(false)}\n        >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"appsignup\">\n         <center>\n           <img className=\"appheaderimage\"\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTYVsBMwE45E6rXsJHWO5p-C95h6sH4FRk7IA&usqp=CAU\"\n        alt=\"\"\n           />\n          </center>\n          \n          <Input\n            placeholder=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            />\n           <Button type=\"submit\" onClick={signIn}> Sign In</Button>\n            \n         \n         </form>\n        </div>\n      </Modal>\n         \n         <div className=\"appheader\">\n        <img className=\"appheaderimage\"\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTYVsBMwE45E6rXsJHWO5p-C95h6sH4FRk7IA&usqp=CAU\"\n        alt=\"\"\n        />\n        {user ? (\n          <Button onClick={() => auth.signOut()}><b>LOGOUT</b></Button>\n          ): (\n            <div className=\"applogincontainer\">\n          <Button onClick={() => setopenSignIn(true)}>Sign In</Button>\n          <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n          )}\n        </div>\n        \n        <div className=\"appposts\">\n          <div className=\"apppostleft\">\n           { \n        posts.map(({id, post}) => (\n          <Post key ={id} postId={id} user={user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} />\n          ))\n        }\n        </div>\n        <div className=\"apppostright\">\n        <InstagramEmbed\n        url='https://www.instagr.com/p/B_uf9dmAGPw/'\n        maxWidth={320}\n        hideCaption={false}\n        containerTagName='div'\n        protocol=''\n        injectScript\n        onLoading={() => {}}\n        onSuccess={() => {}}\n        onAfterRender={() => {}}\n        onFailure={() => {}}\n       />\n       </div>\n        </div>\n\n        {user?.email ? (\n          <ImageUpload username={user.displayName} />\n           ): (\n           <h3>sry u need 2 login upload...</h3>\n           )}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}